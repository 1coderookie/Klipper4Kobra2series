# This file contains common pin mappings for MKS Robin Nano V3
# boards. To use this config, the firmware should be compiled for the
# stm32f407. When running "make menuconfig", select the 48KiB
# bootloader, and enable "USB for communication".

# The "make flash" command does not work on the MKS Robin. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "Robin_nano_v3.bin" on an SD card and then restart the
# MKS Robin with that SD card.

# See docs/Config_Reference.md for a description of parameters.

###############
# ATTENTION:
# - This configuration is WIP! 
# - Use at your own risk! 
# - Check everything first before starting a print!
# - Please see the configuration reference of the official Klipper doc: https://www.klipper3d.org/Config_Reference.html
##############
# NOTES:  
#
# This configuration is for the MKS Robin Nano v3.1 as a replacement for the stock mainboard of an Anycubic Kobra 2 Pro/Plus/Max. 
# The given settings are for a *Kobra 2 PRO*! 
# Please mind the comments I added for certain settings.  
#
# For tipps and instructions about how to proceed when installing an MKS Robin Nano v3.1 in a K2 Pro/Plus/Max, please see my comprehensive and model-specific infosites: 
# - Kobra 2 PRO: https://1coderookie.github.io/Kobra2ProInsights/ -> chapter https://1coderookie.github.io/Kobra2ProInsights/hardware/mainboard/#mod-mks-robin-nano-v31
# - Kobra 2 PLUS: https://1coderookie.github.io/Kobra2PlusInsights/ -> chapter https://1coderookie.github.io/Kobra2PlusInsights/hardware/mainboard/#mod-mks-robin-nano-v31
# - Kobra 2 MAX: https://1coderookie.github.io/Kobra2MaxInsights/ -> chapter https://1coderookie.github.io/Kobra2MaxInsights/hardware/mainboard/#mod-mks-robin-nano-v31
#
# You can find my adpater plate for mounting the MKS Robin Nano v3.1 in the stock mainboard's housing here: https://www.printables.com/model/817843-kobra-2-proplusmax-mks-robin-nano-v31-adapter-plat 
#
# This configuration file can be found here: https://github.com/1coderookie/Klipper4Kobra2series/blob/main/Kobra2Pro/MKS/Robin_Nano_v3.1/MKS-Nano-v31_K2Pro_printer.cfg
#
# Configuration by 1coderookie (aka Catnippr / aka Meowsketeer)
#
###############
#
# Configuration file for ANYCUBIC KOBRA 2 PRO with MKS ROBIN NANO v3.1
#
################

[include mainsail.cfg]
# [include gcode.cfg]
# [include macros.cfg]
# [include extras.cfg]

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_390019001151323439393937-if00  #check if it fits your installation
baud: 115200 
restart_method: command

[virtual_sdcard]
path: ~/printer_data/gcodes  # This is the usual path for a 'regular' Klipper installation!
on_error_gcode: CANCEL_PRINT

[pause_resume]

[display_status]

[exclude_object] # Allows Klipper to exclude objects while a print is in progress - see official docs for further info.

[gcode_arcs]
resolution: 1.0

[idle_timeout]
gcode:
  M104 S0
timeout: 600


[printer] # Adjust the following settings according to the results of the resonance measurements and the type of shaper model you chose. Be conservative though and better use lower values than extreme ones, the hardware won't suffer as much then.
kinematics: cartesian
max_velocity: 300 
max_accel: 5000 
max_z_velocity: 20 
max_z_accel: 500 
square_corner_velocity : 10 

# KobraOS stock settings for K2 PRO, just as a reference:
# max_velocity : 500.000000
# max_accel : 20000.000000
# max_z_velocity : 16.000000
# max_z_accel : 5000.000000
# minimum_z_position : -20.000000
# square_corner_velocity : 20.000000

# KobraOS stock settings for K2 PLUS, just as a reference:
# max_velocity : 500.000000
# max_accel : 10000.000000
# max_z_velocity : 16.000000
# max_z_accel : 3000.000000
# minimum_z_position : -20.000000
# square_corner_velocity : 15.000000

# KobraOS stock settings for K2 MAX, just as a reference:
# max_velocity : 500.000000
# max_accel : 10000.000000
# max_z_velocity : 16.000000
# max_z_accel : 3000.000000
# minimum_z_position : -20.000000
# square_corner_velocity : 15.000000



# Note on the following stepper drivers configurations:
# I'm using TMC2208 stepper drivers! 
# If you're using TMC2209 stepper drivers, adjust the settings accordingly! See Klipper's configuration reference for further information.


[stepper_x] # driver X
step_pin: PE3
dir_pin: PE2
enable_pin: !PE4
microsteps: 16
rotation_distance: 32 #Setting for the PRO and PLUS. For the MAX you have to set 40! How to calculate: [rotation_distance = "belt_pitch" * "number_of_teeth_on_pulley"] = e.g. 2mm belt pitch * 16 teeth pulley (at PRO and PLUS) = 32
endstop_pin: !PA15 
position_min : -5
position_max: 230 # Attention: usually 220 is set for the K2 Pro! If using a K2 Plus or K2 Max, adjust the setting accordingly to the bedsize!             
position_endstop : -5 
homing_speed: 100
second_homing_speed: 10
homing_retract_dist: 5

[tmc2208 stepper_x]
uart_pin : PD5
run_current : 1.0 # Adjust if necessary
stealthchop_threshold: 999999 # stealthChop mode enabled


[stepper_y] # driver Y
step_pin: PE0
dir_pin: PB9                     
enable_pin: !PE1
microsteps: 16
rotation_distance: 32 #Setting for the PRO and PLUS. For the MAX you have to set 40! How to calculate: [rotation_distance = "belt_pitch" * "number_of_teeth_on_pulley"] = e.g. 2mm belt pitch * 16 teeth pulley (at PRO and PLUS) = 32
endstop_pin: !PD2 
position_min : -12
position_max: 230 # Attention: usually 220 is set for the K2 Pro! If using a K2 Plus or K2 Max, adjust the setting accordingly to the bedsize!         
position_endstop : -8.000000      
homing_speed: 100
second_homing_speed: 10
homing_retract_dist: 5

[tmc2208 stepper_y]
uart_pin : PD7 
run_current : 1.0 # Adjust if necessary
stealthchop_threshold: 999999 # stealthChop mode enabled


[stepper_z] # driver Z1
step_pin: PB5
dir_pin: PB4                          
enable_pin: !PB8
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop     
# endstop_pin: PC8 #! or not? -> Optional optical endstop for z min; connector "Z-"
# endstop_pin: ^PC4 #! or not? ^ or not? -> Using the z offset switch at the back of the bed as z-endstop; connector "Z+" - make sure to adjust the home_xy_position in safe_z_home below 
position_min : -2.5
position_max: 245 # Attention: setting is for the K2 Pro! If using a K2 Plus or K2 Max, adjust the setting accordingly to the height of the build volume!           
homing_speed: 20
second_homing_speed: 1
homing_retract_dist: 5

[tmc2208 stepper_z] #driver Z1
uart_pin : PD4
run_current : 1.0 # Adjust if necessary
stealthchop_threshold: 999999  # stealthChop mode enabled

# NOTE: 
# For the second z-axis stepper at a K2 Plus or Max, either 
# - connect the 2nd motor parallel to the 1st and connect it to Z2 -> both motors will be driven simultaneously from the same Z driver.
# - connect the 2nd motor to E1 and use an independent driver. In this case you can take advantage of the function [z_tilt_adjust] (please see the official Klipper config reference). 
#
# Driver E1 has the following pin assignments for UART mode: 
# step_pin: PD15
# dir_pin: PA1
# enable_pin: !PA3
# uart_pin: PD8
# In the following, you'll find a preconfigured section for E1 as the 2nd z-stepper driver "Z2" - uncomment if you use E1 and check everything again. 
#[stepper_z2] # driver E1
#step_pin: PD15
#dir_pin: PA1                          
#enable_pin: !PA3
#microsteps: 16
#rotation_distance: 8
#endstop_pin: probe:z_virtual_endstop     
# endstop_pin: PC8 #! or not? -> Optional optical endstop for z min; connector "Z-"
# endstop_pin: ^PC4 #! or not? ^ or not? -> Using the z offset switch at the back of the bed as z-endstop; connector "Z+" - make sure to adjust the home_xy_position in safe_z_home below 
#position_min : -2.5
#position_max: 245 # Check this setting!           
#homing_speed: 20
#second_homing_speed: 1
#homing_retract_dist: 5

#[tmc2208 stepper_z2] #driver E1
#uart_pin : PD8
#run_current : 1.0
#stealthchop_threshold: 999999  # stealthChop mode enabled




# [z_tilt]  # When driving both Z-axis motors at the K2 Plus & Max INDEPENDENTLY by using e.g. driver Z1 and driver E1, one can take advantage of the z_tilt functionality. 
#z_positions:
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point". The
#   "pivot point" is the point where the bed attaches to the given Z
#   stepper. It is described using nozzle coordinates (the X, Y position
#   of the nozzle if it could move directly above the point). The
#   first entry corresponds to stepper_z, the second to stepper_z1,
#   the third to stepper_z2, etc. This parameter must be provided.
#points:
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command.
#   Specify coordinates of the nozzle and be sure the probe is above
#   the bed at the given nozzle coordinates. This parameter must be
#   provided.
#speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
#horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#retries: 0
#   Number of times to retry if the probed points aren't within
#   tolerance.
#retry_tolerance: 0
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance. Note the smallest unit of
#   change here would be a single step. However if you are probing
#   more points than steppers then you will likely have a fixed
#   minimum value for the range of probed points which you can learn
#   by observing command output.


[safe_z_home]
home_xy_position : 0, 0  #If z-offset switch is being used as z-limit switch at the K2 Pro (and I *guess* also at the K2 Plus): 56, 238.5 # Values are different at the K2 Max, because the z-offset sensor is at the right hand side! 
speed : 150
z_hop : 5
z_hop_speed : 8.0


[extruder] # driver E0
step_pin: PD6
dir_pin: PD3                          
enable_pin: !PB3
microsteps: 16
rotation_distance: 6.877 # Calibrate for your specific setup!
nozzle_diameter: 0.6  # Set your nozzle size accordingly, stock nozzle size is 0.4mm
filament_diameter: 1.750
min_extrude_temp: 0
max_extrude_only_distance: 200
pressure_advance: 0.05 # Adjust this value to the result of your Pressure Advance tests.
pressure_advance_smooth_time: 0.04 # = default; you can try smaller smooth time together with smaller pressure advance value
heater_pin: PE5 #connector HE0
sensor_type: Generic 3950 # KobraOS setting: EPCOS 100K B57560G104F -> doesn't seem to provide accurate readings.
sensor_pin: PC1 #connector TH1 
#control: pid  # Tune PID for your specific setup!
#pid_Kp: 26.446
#pid_Ki: 1.433
#pid_Kd: 121.984
min_temp: 0
max_temp: 260

[tmc2208 extruder] #driver E0
uart_pin : PD9
run_current : 1.0 # Adjust if necessary
sense_resistor : 0.075


# [firmware_retraction]  # Uncomment and adjust the settings to your needs if you want to use fw retraction settings.
# retract_length: 0.8
# retract_speed: 50
# unretract_extra_length: 0
# unretract_speed: 40



[heater_bed]
heater_pin: PA0
pullup_resistor: 5200
sensor_type: ATC Semitec 104GT-2 #KobraOS setting
sensor_pin: PC0 #Connector TB1
#control: pid  # Tune PID for your specific setup!
#pid_Kp: 67.572
#pid_Ki: 1.444
#pid_Kd: 790.593
min_temp: 0
max_temp: 110 # ATTENTION: set to 90 if using K2 Plus or Max!



[fan] #part cooling fan
pin: PC14 #connector FAN1

[heater_fan heatsink_fan] #heatsink cooling fan of the hotend
pin: PB1 #connector FAN2


[filament_switch_sensor filament_sensor]
switch_pin: !PA4 #! or not?
runout_gcode: PAUSE
insert_gcode: RESUME
# 
# pause_on_runout: True  # When set to True, a PAUSE will execute immediately after a runout is detected. Note that if pause_on_runout is False and the runout_gcode is omitted then runout detection is disabled. Default is True.
# runout_gcode:  # A list of G-Code commands to execute after a filament runout is detected. See docs/Command_Templates.md for G-Code format. If pause_on_runout is set to True this G-Code will run after the PAUSE is complete. The default is not to run any G-Code commands.
# insert_gcode:  # A list of G-Code commands to execute after a filament insert is detected. See docs/Command_Templates.md for G-Code format. The default is not to run any G-Code commands, which disables insert detection.
# event_delay: 3.0  # The minimum amount of time in seconds to delay between events. Events triggered during this time period will be silently ignored. The default is 3 seconds.
# pause_delay: 0.5  # The amount of time to delay, in seconds, between the pause command dispatch and execution of the runout_gcode. It may be useful to increase this delay if OctoPrint exhibits strange pause behavior. Default is 0.5 seconds.


[probe]
pin : PA8
x_offset : 23
y_offset : 13
#z_offset : 4.0
speed : 2.0
lift_speed : 2.0
samples : 5
sample_retract_dist : 5
samples_result : average
samples_tolerance : 0.05
samples_tolerance_retries : 5


[bed_mesh] # adjust settings to what fits your needs
speed : 60.0
horizontal_move_z : 5
mesh_min : 19, 19
mesh_max : 205,210
probe_count : 7,7
mesh_pps : 3,3
algorithm : bicubic
zero_reference_position: 87, 97 #should be the same location where PROBE_CALIBRATE and Z_ENDSTOP_CALIBRATION (if using an extra z-min limit switch) is performed


#[screws_tilt_adjust]  
# If you're using adjustable spacers for being able to manually tram the bed, configure [screws_tilt_adjust] which helps you tramming the bed. Please see Klipper's documentation for further info.
#screw1:  # The (X, Y) coordinate of the first bed leveling screw. This is a position to command the nozzle to so that the probe is directly above the bed screw (or as close as possible while still being above the bed). This is the base screw used in calculations. This parameter must be provided.
#screw1_name:  # An arbitrary name for the given screw. This name is displayed when the helper script runs. The default is to use a name based upon the screw XY location.
#screw2:
#screw2_name:
#... 
#   Additional bed leveling screws. At least two screws must be defined.
#speed: 50  # The speed (in mm/s) of non-probing moves during the calibration. The default is 50.
#horizontal_move_z: 5  # The height (in mm) that the head should be commanded to move to just prior to starting a probe operation. The default is 5. 
#screw_thread: CW-M3  # The type of screw used for bed leveling, M3, M4, or M5, and the rotation direction of the knob that is used to level the bed. Accepted values: CW-M3, CCW-M3, CW-M4, CCW-M4, CW-M5, CCW-M5. Default value is CW-M3 which most printers use. A clockwise rotation of the knob decreases the gap between the nozzle and the bed. Conversely, a counter-clockwise rotation increases the gap.


# [axis_twist_compensation]  
# Compensates a twisted X-axis gantry. Shouldn't be necessary, but you might want to check for it and use it.  
# speed: 50  # The speed (in mm/s) of non-probing moves during the calibration. The default is 50.
# horizontal_move_z: 5  # The height (in mm) that the head should be commanded to move to just prior to starting a probe operation. The default is 5.
# calibrate_start_x: 20 # Defines the minimum X coordinate of the calibration. This should be the X coordinate that positions the nozzle at the starting calibration position. This parameter must be provided.
# calibrate_end_x: 210  # Defines the maximum X coordinate of the calibration. This should be the X coordinate that positions the nozzle at the ending calibration position. This parameter must be provided.
# calibrate_y: 115 # Defines the Y coordinate of the calibration. This should be the Y coordinate that positions the nozzle during the calibration process. This parameter must be provided and is recommended to be near the center of the bed


[resonance_tester] # Using the stock LIS2DW accel chips given at the printhead's PCB and the bed.
probe_points : 115,115,50 # Center of the PRO's bed - adjust settings accordingly if you're using the PLUS or MAX.
accel_chip_x : lis2dw X
accel_chip_y : lis2dw Y
min_freq : 1.0  # Minimum frequency to test for resonances. The default is 5 Hz.
max_freq : 140.0  # Maximum frequency to test for resonances. The default is 133.33 Hz.
accel_per_hz : 75.0 # This parameter is used to determine which acceleration to use to test a specific frequency: accel = accel_per_hz * freq. Higher the value, the higher is the energy of the oscillations. Can be set to a lower than the default value if the resonances get too strong on the printer. However, lower values make measurements of high-frequency resonances less precise. The default value is 75 (mm/sec).
hz_per_sec : 1.0 # Determines the speed of the test. When testing all frequencies in range [min_freq, max_freq], each second the frequency increases by hz_per_sec. Small values make the test slow, and the large values will decrease the precision of the test. The default value is 1.0 (Hz/sec == sec^-2).
max_smoothing : 0.05  # Maximum input shaper smoothing to allow for each axis during shaper auto-calibration (with 'SHAPER_CALIBRATE' command). By default no maximum smoothing is specified. Refer to Measuring_Resonances guide for more details on using this feature.

# NOTE:
# In the following, the bus and pin assignments for both accel chips are set. 
# I wired up both sensors to the same MOSI, MISO, SCLK of the EXP2 connector, which is SPI1. 
# Attention: CS pins HAVE to be connected to different pins!  
# Accel sensor needs 5V VCC - you can take that from either EXP1 or the BLtouch connector.
# If you need that EXP2 connector for an optional screen, you can try using the free socket for the WiFi module which is SPI2 then - see comments. 
# If that doesn't work and you don't need the 5th stepper driver E1 for driving a 2nd z-axis motor independently, you can also use that one - make sure to set the jumper for SPI mode then!  
#
########################################
# EXP1 / EXP2 (display) pins
########################################
# [board_pins]
# aliases:
    # EXP1 header
#    EXP1_1=PC5,  EXP1_3=PD13, EXP1_5=PE14, EXP1_7=PD11, EXP1_9=<GND>,
#    EXP1_2=PE13, EXP1_4=PC6,  EXP1_6=PE15, EXP1_8=PD10, EXP1_10=<5V>,
    # EXP2 header
#    EXP2_1=PA6, EXP2_3=PE8, EXP2_5=PE11, EXP2_7=PE12,  EXP2_9=<GND>,
#    EXP2_2=PA5, EXP2_4=PE10, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<3.3v>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "ssp1"
# See the MKS Lcd Config path file for definitions of common LCD displays.

[lis2dw X] # accel sensor HEAD=X at connector EXP2 = SPI1
spi_speed : 1000000 #SPI speed in Hz when communicating; default: 5000000
spi_bus : spi1 #spi2 if WiFi socket is being used
cs_pin: PE10 #EXP2_4; SPI enable pin for the sensor; if WiFi socket (=SPI2) is being used, try PC15 
axes_map : x,y,z #not 100% sure yet since chip is being mounted vertically at the head's PCB -> should it be "z,x,y" instead? Actually it seems to not matter.

[lis2dw Y] # accel sensor BED=Y at connector EXP2 = SPI1
spi_speed : 1000000 #SPI speed in Hz when communicating; default: 5000000
spi_bus : spi1 #spi2 if WiFi socket is being used
cs_pin: PE11 #EXP2_5; SPI enable pin for the sensor; if WiFi socket (=SPI2) is being used, try e.g. PC13
axes_map : x,y,z #not 100% sure yet -> should it be "y,x,z" instead? Actually it seems to not matter.


[input_shaper] # Set the correct values and shaper type according to your findings/measurements. 
shaper_freq_x: 65.0 
shaper_type_x: ei
shaper_freq_y: 43.2
shaper_type_y: mzv


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 20.223
#*# pid_ki = 0.864
#*# pid_kd = 118.304
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 59.119
#*# pid_ki = 0.957
#*# pid_kd = 913.394
#*#
#*# [probe]
#*# z_offset = 2.061
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.047724, -0.020224, -0.007724, -0.002724, 0.001776, 0.009776, -0.000724
#*# 	  -0.084724, -0.057724, -0.017724, -0.033724, -0.049224, -0.060724, -0.085224
#*# 	  -0.065224, -0.045224, -0.026724, -0.024224, -0.025724, -0.028724, -0.039724
#*# 	  -0.005724, 0.015776, 0.036776, 0.009776, 0.007276, 0.012276, -0.013224
#*# 	  -0.024224, -0.000224, 0.023776, 0.025276, 0.039776, 0.053276, 0.059776
#*# 	  -0.022724, -0.006724, 0.018776, 0.013276, 0.014776, 0.017276, 0.004276
#*# 	  0.132276, 0.122276, 0.118776, 0.105276, 0.081276, 0.058276, 0.040276
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 3
#*# mesh_y_pps = 3
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 19.0
#*# max_x = 205.0
#*# min_y = 19.0
#*# max_y = 209.98
